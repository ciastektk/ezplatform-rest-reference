get:
    displayName: List Users
    description: Load users either for a given remoteId or role
    queryParameters:
        roleId:
            description: Lists users assigned to the given Role (e.g. GET /user/users?roleId=/user/roles/1)
        remoteId:
            description: Retrieves the user for the given remoteId (e.g. GET /user/users?remoteId=55dd9713db75145f374bbd0b4f60ad29)
        login:
            description: Retrieves the user for the given login (e.g. GET /user/users?login=editor)
        email:
            description: Lists users with the given email (e.g. GET /user/users?email=editor@example.com)
    headers:
        Accept:
            description: UserList - if set the user list returned in XML or JSON format. UserRefList - if set the link list of users returned in XML or JSON format
            example:  |
                application/vnd.ez.api.UserList+xml
                application/vnd.ez.api.UserList+json
                application/vnd.ez.api.UserRefList+xml
                application/vnd.ez.api.UserRefList+json
    responses:
        200:
            description: OK - Loads users either for a given remoteId or role
            body:
                application/vnd.ez.api.UserRefList+xml:
                    type: UserRefList
                    example: !include examples/user/users/GET/UserRefList.xml.example
                application/vnd.ez.api.UserList+xml:
                    type: UserList
                    example: !include examples/user/users/GET/UserList.xml.example
        404:
            description: If there are no visibile users matching the filter

head:
    displayName: Verify users
    description: Verifies if there are users matching the given filter.
    queryParameters:
        roleId:
            description: Lists users assigned to the given Role (e.g. GET /user/users?roleId=/user/roles/1)
        remoteId:
            description: Retrieves the user for the given remoteId (e.g. GET /user/users?remoteId=55dd9713db75145f374bbd0b4f60ad29)
        login:
            description: Retrieves the user for the given login (e.g. GET /user/users?login=editor)
        email:
            description: Lists users with the given email (e.g. GET /user/users?email=editor@example.com)
    responses:
        200:
            description: OK - verifies if there are users matching the given filter
        404:
            description: Error - there are no visibile users matching the filter

/{userId}:
    get:
        displayName: Loade user
        description: Loads the user with the given ID
        headers:
            Accept:
                description: If set the user is returned in XML or JSON format
                example:  |
                    application/vnd.ez.api.User+xml
                    application/vnd.ez.api.User+json
            If-None-Match:
                description: ETag
        responses:
            200:
                description: OK - the user with the given ID
                body:
                    application/vnd.ez.api.User+xml:
                        type: UserList
                        example: !include examples/user/users/user_id/GET/User.xml.example
            401:
                description: Error - the user has no permission to read users
            404:
                description: Error - the user does not exist
    patch:
        displayName: Update user
        description: Updates a user
        headers:
            Accept:
                description: If set the new user is returned in XML or JSON format
                example:  |
                    application/vnd.ez.api.User+xml
                    application/vnd.ez.api.User+json
            Content-Type:
                description: The UserUpdate schema encoded in XML or JSON
                example:  |
                    application/vnd.ez.api.UserUpdate+json
                    application/vnd.ez.api.UserUpdate+xml
            If-Match:
                description: Causes to patch only if the specified ETag is the current one. Otherwise a 412 is returned.
                example: ETag
        body:
            application/vnd.ez.api.UserUpdate+xml:
                type: UserUpdate
                example: !include examples/user/users/user_id/PATCH/UserUpdate.xml.example
        responses:
            200:
                description: OK - user updated
                body:
                    application/vnd.ez.api.User+xml:
                        type: User
                        example: !include examples/user/users/user_id/PATCH/User.xml.example
            400:
                description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage
            401:
                description: Error - the user is not authorized to update the user
            404:
                description: Error - the user does not exist
            412:
                description: Error - the current ETag does not match with the provided one in the If-Match header
    delete:
        displayName: Delete user
        description: The given user is deleted
        responses:
            204:
                description: No Content
            401:
                description: Error - the user is not authorized to delete this user
            403:
                description: Error - the user is the same as the authenticated user
            404:
                description: Error - the user does not exist
    /groups:
        get:
            displayName: Load Groups Of User
            description: Returns a list of user groups the user belongs to. The returned list includes the resources for unassigning a user group if the user is in multiple groups.
            queryParameters:
                offset:
                    description: The offset of the result set
                    type: integer
                limit:
                    description: The number of locations returned
                    type: integer
            headers:
                Accept:
                    description: If set the link list of user groups is returned in XML or JSON format
                    example:  |
                        application/vnd.ez.api.UserGroupRefList+xml
                        application/vnd.ez.api.UserGroupRefList+json
            responses:
                200:
                    body:
                        application/vnd.ez.api.UserGroupRefList:
                            type: UserGroupRefList
                            example: !include examples/user/users/user_id/groups/GET/UserGroupRefList.xml.example
                401:
                    description: Error - the user has no permission to read user groups
                404:
                    description: Error - the user does not exist
        post:
            displayName: Assign User Group
            description: Assigns the user to a user group
            queryParameters:
                group:
                    description: The new parent group resource of the user
            headers:
                Accept:
                    description: If set the link list of user groups is returned in XML or JSON format
                    example:  |
                        application/vnd.ez.api.UserGroupRefList+xml
                        application/vnd.ez.api.UserGroupRefList+json
            responses:
                200:
                    body:
                        application/vnd.ez.api.UserGroupRefList:
                            type: UserGroupRefList
                            example: !include examples/user/users/user_id/groups/POST/UserGroupRefList.xml.example
                401:
                    description: Error - the user is not authorized to assign user groups
                403:
                    description: Error - the new user group does not exist or the user is already in this group
                404:
                    description: Error - the user does not exist
        /{groupId}:
            delete:
                displayName: Unassign User Group
                description: Unassigns the user from a user group
                headers:
                    Accept:
                        description: If set the link list of user groups is returned in XML or JSON format
                        example: |
                            application/vnd.ez.api.UserGroupRefList+xml
                            application/vnd.ez.api.UserGroupRefList+json
                responses:
                    200:
                        body:
                            application/vnd.ez.api.UserGroupRefList:
                                type: UserGroupRefList
                                example: !include examples/user/users/user_id/groups/group_id/DELETE/UserGroupRefList.xml.example
                    401:
                        description: Error - the user is not authorized to unassign user groups
                    403:
                        description: Error - the user is not in the given group
                    404:
                        description: Error - the user does not exist
    /roles:
        get:
            displayName: Load Roles for User
            description: Returns a list of all roles assigned to the given user
            headers:
                Accept:
                    description: If set the Role assignment list is returned in XML or JSON format
                    example:  |
                        application/vnd.ez.api.RoleAssignmentList+xml
                        application/vnd.ez.api.RoleAssignmentList+json
            responses:
                200:
                    body:
                        application/vnd.ez.api.RoleAssignmentList+xml:
                            type: RoleAssignmentList
                            example: !include examples/user/users/user_id/roles/GET/RoleAssignmentList.xml.example
                400:
                    description: Error - the user has no permission to read roles
        post:
            displayName: Assign Role to User
            description: Assigns a Role to a user.
            headers:
                Accept:
                    description: If set the updated Role assignment list is returned in XML or JSON format
                    example:  |
                        application/vnd.ez.api.RoleAssignmentList+xml
                        application/vnd.ez.api.RoleAssignmentList+json
                Content-Type:
                    description: The RoleAssignInput schema encoded in XML or JSON
                    example:  |
                        application/vnd.ez.api.RoleAssignInput+json
                        application/vnd.ez.api.RoleAssignInput+xml
            body:
                application/vnd.ez.api.RoleAssignInput+xml:
                    type: RoleAssignInput
                    example: !include examples/user/users/user_id/roles/POST/RoleAssignInput.xml.example
            responses:
                200:
                    body:
                        application/vnd.ez.api.RoleAssignmentList+xml:
                            type: RoleAssignmentList
                            example: !include examples/user/users/user_id/roles/POST/RoleAssignmentList.xml.example
                400:
                    description: Error - validation of limitation in RoleAssignInput fails
                401:
                    description: Error - the user is not authorized to assign this role
        /{roleId}:
            get:
                displayName: Load Assignment
                description: Returns a Role assignment to the given user group
                headers:
                    Accept:
                        description: If set the Role assignment list is returned in XML or JSON format
                        example:  |
                            application/vnd.ez.api.RoleAssignment+xml
                            application/vnd.ez.api.RoleAssignment+json
                responses:
                    200:
                        description: OK - Role assignment to the given user group
                        body:
                            application/vnd.ez.api.RoleAssignment+xml:
                                type: RoleAssignment
                                example: !include examples/user/users/user_id/roles/role_id/GET/RoleAssignment.xml.example
                    401:
                        description: Error - the user has no permission to read roles
            delete:
                displayName: Unassign Role from User
                description: The given Role is removed from the user
                headers:
                    Accept:
                        description: If set the updated Role assignment list is returned in XML or JSON format
                        example:  |
                            application/vnd.ez.api.RoleAssignmentList+xml
                            application/vnd.ez.api.RoleAssignmentList+json
                responses:
                    200:
                        body:
                            application/vnd.ez.api.RoleAssignmentList+xml:
                                type: RoleAssignmentList
                                example: !include examples/user/users/user_id/roles/role_id/DELETE/RoleAssignmentList.xml.example
                    401:
                        description: Error - the user is not authorized to delete this Content Type
